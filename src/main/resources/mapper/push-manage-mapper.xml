<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.wishtarot.mnspushapi.mapper.PushManageMapper">

    <resultMap type="pushDeviceVO" id="pushDeviceMap">
        <result property="deviceType" column="DEVICE_TYPE"/>
        <result property="deviceId" column="DEVICE_ID"/>
        <result property="custId" column="CUST_ID"/>
        <result property="appCode" column="APP_CODE"/>
    </resultMap>

    <resultMap type="pushNotiRegVO" id="pushNotiRegMap">
        <result property="pnrNo" column="pnr_no"/>
        <result property="pdNo" column="pd_no"/>
        <result property="pushInfoNo" column="push_info_no"/>
        <result property="regDt" column="reg_dt"/>
    </resultMap>

    <resultMap id="PushHistResultMap" type="kr.wishtarot.mnspushapi.domain.PushHist">
        <id property="histNo" column="hist_no"/>
        <result property="pnrNo" column="pnr_no"/>
        <result property="title" column="title"/>
        <result property="message" column="message"/>
        <result property="sendDt" column="send_dt"/>
        <result property="sendSuccessYn" column="send_success_yn"/>
        <result property="sendError" column="send_error"/>

        <!-- PushNotiReg properties -->
        <result property="pushNotiReg.pnrNo" column="pushNotiReg_pnrNo"/>
        <result property="pushNotiReg.pdNo" column="pushNotiReg_pdNo"/>
        <result property="pushNotiReg.pushInfoNo" column="pushNotiReg_pushInfoNo"/>
        <result property="pushNotiReg.regDt" column="pushNotiReg_regDt"/>

        <!-- PushDevice properties -->
        <result property="pushDevice.pdNo" column="pushDevice_pdNo"/>
        <result property="pushDevice.deviceType" column="pushDevice_deviceType"/>
        <result property="pushDevice.deviceId" column="pushDevice_deviceId"/>
        <result property="pushDevice.custId" column="pushDevice_custId"/>
        <result property="pushDevice.regDt" column="pushDevice_regDt"/>

        <!-- PushInfo properties -->
        <result property="pushInfo.pushInfoNo" column="pushInfo_pushInfoNo"/>
        <result property="pushInfo.pushAppNo" column="pushInfo_pushAppNo"/>
        <result property="pushInfo.notiCode" column="pushInfo_notiCode"/>
        <result property="pushInfo.notiNm" column="pushInfo_notiNm"/>

        <!-- AppInfo properties -->
        <result property="appInfo.pushAppNo" column="appInfo_pushAppNo"/>
        <result property="appInfo.appCode" column="appInfo_appCode"/>
        <result property="appInfo.appNm" column="appInfo_appNm"/>
    </resultMap>

    <select id="countPushDeviceByCriteria" parameterType="pushDeviceVO" resultType="int">
        SELECT COUNT(*)
        FROM push_device
        WHERE DEVICE_TYPE = #{deviceType}
        AND DEVICE_ID = #{deviceId}
        <if test="custId != null and custId != ''">
            AND cust_id = #{custId}
        </if>
    </select>

    <select id="selectPushDevice" parameterType="pushDeviceVO" resultType="kr.wishtarot.mnspushapi.domain.PushDevice">
        SELECT *
        FROM push_device
        WHERE DEVICE_TYPE = #{deviceType}
        AND DEVICE_ID = #{deviceId}
        AND APP_CODE = #{appCode}
    </select>

    <select id="getPdNoFromPushDevice" parameterType="pushDeviceVO" resultType="java.lang.Long">
        SELECT pd_no
        FROM push_device
        WHERE DEVICE_TYPE = #{deviceType}
        AND DEVICE_ID = #{deviceId}
        <if test="custId != null and custId != ''">
            AND cust_id = #{custId}
        </if>
    </select>

    <select id="getPdNoListFromPushDevice" parameterType="pushDeviceVO" resultType="java.util.List">
        SELECT pd_no
        FROM push_device
        WHERE DEVICE_TYPE = #{deviceType}
        <if test="deviceId != null and deviceId != ''">
            AND DEVICE_ID = #{deviceId}
        </if>
        <if test="custId != null and custId != ''">
            AND cust_id = #{custId}
        </if>
    </select>

    <select id="countRegAppByCriteria" resultType="int">
        SELECT COUNT(*)
        FROM app_info
        WHERE APP_CODE = #{appCode}
    </select>

    <select id="getRegApp" resultType="String">
        SELECT APP_CODE
        FROM app_info
        WHERE APP_CODE = #{appCode}
    </select>

    <select id="getPushInfoNoByAppCodeAndNotiCode" parameterType="map" resultType="java.lang.Long">
        SELECT pi.push_info_no
        FROM push_info pi
        JOIN app_info ai ON pi.push_app_no = ai.push_app_no
        WHERE ai.app_code = #{appCode}
        AND pi.noti_code = #{notiCode}
    </select>

    <select id="selectPnrNoByDeviceAndCustIdAndAppCode" resultType="long" parameterType="map">
        SELECT pnr.pnr_no
        FROM push_noti_reg pnr
        JOIN push_device pd ON pnr.pd_no = pd.pd_no
        JOIN push_info pi ON pnr.push_info_no = pi.push_info_no
        JOIN app_info ai ON pi.push_app_no = ai.push_app_no
        WHERE pd.device_id = #{deviceId}
        AND pd.cust_id = #{custId}
        AND SUBSTRING(pi.noti_code, 2, 1) = 'L'
        AND ai.app_code = #{app_code};
    </select>

    <delete id="deletePushNotiRegByPnrNoList" parameterType="map">
        DELETE FROM push_noti_reg
        WHERE pnr_no IN
        <foreach item="pnrNo" index="index" collection="pnrNoList" open="(" separator="," close=")">
            #{pnrNo}
        </foreach>
    </delete>

    <update id="updateCustIdToNull" parameterType="pushDeviceVO">
        UPDATE push_device
        SET cust_id = NULL
        WHERE device_id = #{deviceId}
        AND cust_id = #{custId};
    </update>

    <insert id="insertPushDevice" parameterType="pushDeviceVO">
        INSERT INTO push_device
        (DEVICE_TYPE, DEVICE_ID, REG_DT
        <if test="custId != null">
            , CUST_ID
        </if>)
        VALUES
        (#{deviceType}, #{deviceId}, NOW()
        <if test="custId != null">
            , #{custId}
        </if>)
    </insert>

    <insert id="insertOrUpdatePushDevice" parameterType="pushDeviceVO">
        INSERT INTO push_device
        (DEVICE_TYPE, DEVICE_ID, REG_DT
        <if test="custId != null">
            , CUST_ID
        </if>)
        VALUES
        (#{deviceType}, #{deviceId}, NOW()
        <if test="custId != null">
            , #{custId}
        </if>)
        ON DUPLICATE KEY UPDATE
        DEVICE_TYPE = VALUES(DEVICE_TYPE),
        REG_DT = NOW()
        <if test="custId != null">
            , CUST_ID = VALUES(CUST_ID)
        </if>
    </insert>

    <update id="updateCustIdByDeviceId" parameterType="PushDeviceVO">
        UPDATE push_device
        SET cust_id = #{custId}
        WHERE device_id = #{deviceId}
    </update>

    <insert id="insertPushNotiRegByDeviceAndCustIdAndAppCode" parameterType="map">
        INSERT INTO push_noti_reg (pd_no, push_info_no, reg_dt)
        SELECT pd.pd_no, pi.push_info_no, NOW()
        FROM push_device pd
        JOIN push_info pi ON pd.pd_no = pd.pd_no
        JOIN app_info ai ON pi.push_app_no = ai.push_app_no
        WHERE pd.device_id = #{deviceId}
        AND pd.cust_id = #{custId}
        AND ai.app_code = #{app_code}
        AND SUBSTRING(pi.noti_code, 2, 1) = 'L';
    </insert>


    <delete id="deletePushDevice" parameterType="pushDeviceVO">
        DELETE
        FROM push_device
        WHERE DEVICE_TYPE = #{deviceType}
        AND DEVICE_ID = #{deviceId}
    </delete>

    <delete id="deletePushNotiRegUsingPushDevice" parameterType="pushDeviceVO">
        <!-- Push Device 정보를 사용하여 push_noti_reg 테이블의 데이터를 삭제 -->
        DELETE pnr
        FROM push_noti_reg pnr
        JOIN push_device pd ON pnr.pd_no = pd.pd_no
        WHERE pd.device_type = #{deviceType}  <!-- pushDeviceVO의 deviceType 사용 -->
        AND pd.device_id = #{deviceId}        <!-- pushDeviceVO의 deviceId 사용 -->
        <if test="custId != null">
            AND pd.cust_id = #{custId}        <!-- pushDeviceVO의 custId 사용 (필요한 경우) -->
        </if>
    </delete>

    <insert id="insertPushNotiReg" parameterType="pushNotiRegVO">
        INSERT INTO push_noti_reg
        (pd_no, push_info_no, reg_dt)
        VALUES
        (#{pdNo}, #{pushInfoNo}, NOW())
    </insert>

    <delete id="deletePushNotiReg" parameterType="pushNotiRegVO">
        DELETE
        FROM push_noti_reg
        WHERE pd_no = #{pdNo}
        AND push_info_no = #{pushInfoNo}
    </delete>

    <select id="selectPushHistWithAssociations" resultMap="PushHistResultMap">
        SELECT
        ph.hist_no, ph.pnr_no, ph.title, ph.message, ph.send_dt, ph.send_success_yn, ph.send_error,
        pnr.pnr_no AS pushNotiReg_pnrNo, pnr.pd_no AS pushNotiReg_pdNo, pnr.push_info_no AS pushNotiReg_pushInfoNo, pnr.reg_dt AS pushNotiReg_regDt,
        pd.pd_no AS pushDevice_pdNo, pd.device_type AS pushDevice_deviceType, pd.device_id AS pushDevice_deviceId, pd.cust_id AS pushDevice_custId, pd.reg_dt AS pushDevice_regDt,
        pi.push_info_no AS pushInfo_pushInfoNo, pi.push_app_no AS pushInfo_pushAppNo, pi.noti_code AS pushInfo_notiCode, pi.noti_nm AS pushInfo_notiNm,
        ai.push_app_no AS appInfo_pushAppNo, ai.app_code AS appInfo_appCode, ai.app_nm AS appInfo_appNm
        FROM push_hist ph
        JOIN push_noti_reg pnr ON ph.pnr_no = pnr.pnr_no
        JOIN push_device pd ON pnr.pd_no = pd.pd_no
        JOIN push_info pi ON pnr.push_info_no = pi.push_info_no
        JOIN app_info ai ON pi.push_app_no = ai.push_app_no
        WHERE 1=1
        <!-- 조건: deviceType -->
        <if test="deviceType != null and deviceType != ''">
            AND pd.device_type LIKE CONCAT('%', #{deviceType}, '%')
        </if>
        <!-- 조건: deviceId -->
        <if test="deviceId != null and deviceId != ''">
            AND pd.device_id LIKE CONCAT('%', #{deviceId}, '%')
        </if>
        <!-- 조건: custId -->
        <if test="custId != null and custId != ''">
            AND pd.cust_id LIKE CONCAT('%', #{custId}, '%')
        </if>
        <!-- 조건: appCode -->
        <if test="appCode != null and appCode != ''">
            AND ai.app_code LIKE CONCAT('%', #{appCode}, '%')
        </if>
        <!-- 조건: notiCode -->
        <if test="notiCode != null and notiCode != ''">
            AND pi.noti_code LIKE CONCAT('%', #{notiCode}, '%')
        </if>
        <!-- 조건: sendSuccessYn -->
        <if test="sendSuccessYn != null and sendSuccessYn != ''">
            AND ph.send_success_yn = #{sendSuccessYn}
        </if>
        <!-- 조건: sendDt -->
        <if test="sendDt != null">
            AND ph.send_dt >= #{sendDt}
        </if>
        ORDER BY ph.send_dt DESC
    </select>

    <update id="updateReceiveSuccess" parameterType="int">
        UPDATE TBFF_PUSH_HIST
        SET RECEIVE_SUCCES_YN = 'Y'
        WHERE HIST_SEQ = #{histSeq}
    </update>

</mapper>
