<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.wishtarot.mnspushapi.mapper.PushManageMapper">

    <resultMap type="pushNotiInfoVO" id="pushNotiInfoMap">
        <result property="notiCode" column="NOTI_CODE"/>
        <result property="notiNm" column="NOTI_NM"/>
        <result property="isSetting" column="IS_SETTING"/>
    </resultMap>

    <resultMap type="pushDeviceVO" id="pushDeviceMap">
        <result property="deviceType" column="DEVICE_TYPE"/>
        <result property="deviceId" column="DEVICE_ID"/>
        <result property="custId" column="CUST_ID"/>
        <result property="appCode" column="APP_CODE"/>
    </resultMap>

    <resultMap type="pushNotiRegVO" id="pushNotiRegMap">
        <result property="pnrNo" column="pnr_no"/>
        <result property="pdNo" column="pd_no"/>
        <result property="pushInfoNo" column="push_info_no"/>
        <result property="regDt" column="reg_dt"/>
    </resultMap>

    <resultMap id="PushHistResultMap" type="kr.wishtarot.mnspushapi.domain.PushHist">
        <!-- Mapping push_hist columns -->
        <id property="histNo" column="hist_no"/>
        <result property="pnrNo" column="pnr_no"/>
        <result property="title" column="title" javaType="String"/>
        <result property="message" column="message" javaType="String"/>
        <result property="sendDt" column="send_dt" javaType="java.time.LocalDateTime"/>
        <result property="sendSuccessYn" column="send_success_yn" javaType="String"/>
        <result property="sendError" column="send_error" javaType="String"/>

        <!-- Association with PushNotiReg -->
        <association property="pushNotiReg" javaType="pushNotiRegVO">
            <id property="pnrNo" column="pnr_no"/>
            <result property="pdNo" column="pd_no"/>
            <result property="pushInfoNo" column="push_info_no"/>
            <result property="regDt" column="pnr_reg_dt"/>
        </association>

        <!-- Association with PushDevice -->
        <association property="pushDevice" javaType="pushDeviceVO">
            <id property="pdNo" column="pd_no"/>
            <result property="deviceType" column="device_type"/>
            <result property="deviceId" column="device_id"/>
            <result property="custId" column="cust_id"/>
            <result property="regDt" column="pd_reg_dt"/>
        </association>

        <!-- Association with PushInfo -->
        <association property="pushInfo" javaType="pushInfoVO">
            <id property="pushInfoNo" column="push_info_no"/>
            <result property="pushAppNo" column="push_app_no"/>
            <result property="notiCode" column="noti_code"/>
            <result property="notiNm" column="noti_nm"/>
        </association>

        <!-- Association with AppInfo -->
        <association property="appInfo" javaType="appInfoVO">
            <id property="pushAppNo" column="push_app_no"/>
            <result property="appCode" column="app_code"/>
            <result property="appNm" column="app_nm"/>
        </association>
    </resultMap>


    <select id="selectPushDevice" parameterType="pushDeviceVO" resultType="kr.wishtarot.mnspushapi.domain.PushDevice">
        SELECT *
        FROM push_device
        WHERE DEVICE_TYPE = #{deviceType}
        AND DEVICE_ID = #{deviceId}
        AND APP_CODE = #{appCode}
    </select>

    <select id="getCustIdFromPushDevice" parameterType="pushDeviceVO" resultType="String">
        SELECT CUST_ID
        FROM TBFF_PUSH_DEVICE
        WHERE DEVICE_TYPE = #{deviceType}
        AND DEVICE_ID = #{deviceId}
        <if test="appCode != null and appCode != ''">
            AND APP_CODE = #{appCode}
        </if>
    </select>

    <select id="getPdNoFromPushDevice" parameterType="pushDeviceVO" resultType="java.lang.Long">
        SELECT pd_no
        FROM push_device
        WHERE DEVICE_TYPE = #{deviceType}
        AND DEVICE_ID = #{deviceId}
        <if test="custId != null and custId != ''">
            AND cust_id = #{custId}
        </if>
    </select>

    <select id="getPdNoListFromPushDevice" parameterType="pushDeviceVO" resultType="java.util.List">
        SELECT pd_no
        FROM push_device
        WHERE DEVICE_TYPE = #{deviceType}
        <if test="deviceId != null and deviceId != ''">
            AND DEVICE_ID = #{deviceId}
        </if>
        <if test="custId != null and custId != ''">
            AND cust_id = #{custId}
        </if>
    </select>

    <select id="countPushDeviceByCriteria" parameterType="pushDeviceVO" resultType="int">
        SELECT COUNT(*)
        FROM push_device
        WHERE DEVICE_TYPE = #{deviceType}
        AND DEVICE_ID = #{deviceId}
    </select>

    <select id="countRegAppByCriteria" resultType="int">
        SELECT COUNT(*)
        FROM app_info
        WHERE APP_CODE = #{appCode}
    </select>

    <select id="getRegApp" resultType="String">
        SELECT APP_CODE
        FROM app_info
        WHERE APP_CODE = #{appCode}
    </select>

    <select id="getPushInfoNoByAppCodeAndNotiCode" parameterType="map" resultType="java.lang.Long">
        SELECT pi.push_info_no
        FROM push_info pi
        JOIN app_info ai ON pi.push_app_no = ai.push_app_no
        WHERE ai.app_code = #{appCode}
        AND pi.noti_code = #{notiCode}
    </select>

    <select id="getPushInfoNoListByAppCodeAndNotiCode" parameterType="map" resultType="java.util.List">
        SELECT pi.push_info_no
        FROM push_info pi
        JOIN app_info ai ON pi.push_app_no = ai.push_app_no
        WHERE ai.app_code = #{appCode}
        AND pi.noti_code = #{notiCode}
    </select>

    <insert id="insertPushDevice" parameterType="pushDeviceVO">
        INSERT INTO push_device
        (DEVICE_TYPE, DEVICE_ID, REG_DT
        <if test="custId != null">
            , CUST_ID
        </if>)
        VALUES
        (#{deviceType}, #{deviceId}, NOW()
        <if test="custId != null">
            , #{custId}
        </if>)
    </insert>

    <delete id="deletePushDevice" parameterType="pushDeviceVO">
        DELETE
        FROM push_device
        WHERE DEVICE_TYPE = #{deviceType}
        AND DEVICE_ID = #{deviceId}
    </delete>

    <delete id="deleteAllPushDeviceReg" parameterType="pushDeviceVO">
        DELETE
        FROM TBFF_PUSH_DEVICEREG
        WHERE APP_CODE = #{appCode}
        AND DEVICE_TYPE = #{deviceType}
        AND DEVICE_ID = #{deviceId}
    </delete>

    <delete id="deletePushNotiRegUsingPushDevice" parameterType="pushDeviceVO">
        <!-- Push Device 정보를 사용하여 push_noti_reg 테이블의 데이터를 삭제 -->
        DELETE pnr
        FROM push_noti_reg pnr
        JOIN push_device pd ON pnr.pd_no = pd.pd_no
        WHERE pd.device_type = #{deviceType}  <!-- pushDeviceVO의 deviceType 사용 -->
        AND pd.device_id = #{deviceId}        <!-- pushDeviceVO의 deviceId 사용 -->
        <if test="custId != null">
            AND pd.cust_id = #{custId}        <!-- pushDeviceVO의 custId 사용 (필요한 경우) -->
        </if>
    </delete>


    <select id="getRegPushNoti" parameterType="pushNotiInfoVO" resultType="String">
        SELECT NOTI_CODE
        FROM TBFF_PUSH_NOTIINFO
        WHERE APP_CODE = #{appCode}
        AND NOTI_CODE = #{notiCode}
    </select>

    <insert id="insertPushDeviceReg" parameterType="pushDeviceRegVO">
        INSERT INTO TBFF_PUSH_DEVICEREG
        (APP_CODE, NOTI_CODE, DEVICE_TYPE, DEVICE_ID, REG_DT)
        VALUES
        (#{appCode}, #{notiCode}, #{deviceType}, #{deviceId}, NOW())
    </insert>

    <insert id="insertPushNotiReg" parameterType="pushNotiRegVO">
        INSERT INTO push_noti_reg
        (pd_no, push_info_no, reg_dt)
        VALUES
        (#{pdNo}, #{pushInfoNo}, NOW())
    </insert>

    <delete id="deletePushDeviceReg" parameterType="pushDeviceRegVO">
        DELETE
        FROM TBFF_PUSH_DEVICEREG
        WHERE APP_CODE = #{appCode}
        AND NOTI_CODE = #{notiCode}
        AND DEVICE_TYPE = #{deviceType}
        AND DEVICE_ID = #{deviceId}
    </delete>

    <delete id="deletePushNotiReg" parameterType="pushNotiRegVO">
        DELETE
        FROM push_noti_reg
        WHERE pd_no = #{pdNo}
        AND push_info_no = #{pushInfoNo}
    </delete>

    <select id="selectPushHistWithAssociations" resultMap="PushHistResultMap">
        SELECT
        ph.hist_no, ph.pnr_no, ph.title, ph.message, ph.send_dt, ph.send_success_yn, ph.send_error,
        pnr.pnr_no, pnr.pd_no, pnr.push_info_no, pnr.reg_dt AS pnr_reg_dt,
        pd.pd_no, pd.device_type, pd.device_id, pd.cust_id, pd.reg_dt AS pd_reg_dt,
        pi.push_info_no, pi.push_app_no, pi.noti_code, pi.noti_nm,
        ai.push_app_no, ai.app_code, ai.app_nm
        FROM push_hist ph
        JOIN push_noti_reg pnr ON ph.pnr_no = pnr.pnr_no
        JOIN push_device pd ON pnr.pd_no = pd.pd_no
        JOIN push_info pi ON pnr.push_info_no = pi.push_info_no
        JOIN app_info ai ON pi.push_app_no = ai.push_app_no
        WHERE 1=1
        <!-- 조건: deviceType -->
        <if test="deviceType != null and deviceType != ''">
            AND pd.device_type LIKE CONCAT('%', #{deviceType}, '%')
        </if>
        <!-- 조건: deviceId -->
        <if test="deviceId != null and deviceId != ''">
            AND pd.device_id LIKE CONCAT('%', #{deviceId}, '%')
        </if>
        <!-- 조건: custId -->
        <if test="custId != null and custId != ''">
            AND pd.cust_id LIKE CONCAT('%', #{custId}, '%')
        </if>
        <!-- 조건: appCode -->
        <if test="appCode != null and appCode != ''">
            AND ai.app_code LIKE CONCAT('%', #{appCode}, '%')
        </if>
        <!-- 조건: notiCode -->
        <if test="notiCode != null and notiCode != ''">
            AND pi.noti_code LIKE CONCAT('%', #{notiCode}, '%')
        </if>
        <!-- 조건: sendSuccessYn -->
        <if test="sendSuccessYn != null and sendSuccessYn != ''">
            AND ph.send_success_yn = #{sendSuccessYn}
        </if>
        <!-- 조건: sendDt -->
        <if test="sendDt != null">
            AND ph.send_dt >= #{sendDt}
        </if>
        ORDER BY ph.send_dt DESC
    </select>

    <select id="getPushNotiInfoList" parameterType="pushDeviceVO" resultMap="pushNotiInfoMap">
        SELECT A.NOTI_CODE, A.NOTI_NM,
        IF(B.NOTI_CODE IS NULL, 'N', 'Y') AS IS_SETTING
        FROM (SELECT APP_CODE, NOTI_CODE, NOTI_NM
        FROM TBFF_PUSH_NOTIINFO
        WHERE APP_CODE = #{appCode}) A
        LEFT JOIN TBFF_PUSH_DEVICEREG B
        ON A.APP_CODE = B.APP_CODE
        AND A.NOTI_CODE = B.NOTI_CODE
        AND B.DEVICE_TYPE = #{deviceType}
        AND B.DEVICE_ID = #{deviceId}
        ORDER BY NOTI_CODE
    </select>

    <select id="getPushDeviceList" parameterType="pushDeviceVO" resultMap="pushDeviceMap">
        SELECT DEVICE_TYPE, DEVICE_ID, CUST_ID, APP_CODE
        FROM TBFF_PUSH_DEVICE
        WHERE CUST_ID = #{custId}
        AND DEVICE_TYPE = #{deviceType}
        AND APP_CODE = #{appCode}
    </select>

    <select id="getCustIdList" parameterType="pushDeviceRegVO" resultMap="pushDeviceMap">
        SELECT A.DEVICE_TYPE, A.DEVICE_ID, A.CUST_ID, A.APP_CODE
        FROM TBFF_PUSH_DEVICE A
        JOIN TBFF_PUSH_DEVICEREG B
        ON A.DEVICE_TYPE = B.DEVICE_TYPE
        AND A.DEVICE_ID = B.DEVICE_ID
        AND A.APP_CODE = B.APP_CODE
        WHERE A.DEVICE_TYPE = #{deviceType}
        AND A.APP_CODE = #{appCode}
        AND B.NOTI_CODE = #{notiCode}
    </select>

    <update id="updatePushDevice" parameterType="tmpPushDeviceVO">
        UPDATE TBFF_PUSH_DEVICE
        SET DEVICE_ID = #{newDeviceId}
        WHERE DEVICE_TYPE = #{deviceType}
        AND DEVICE_ID = #{oldDeviceId}
        AND APP_CODE = #{appCode}
    </update>

    <update id="updatePushDeviceReg" parameterType="tmpPushDeviceVO">
        UPDATE TBFF_PUSH_DEVICEREG
        SET DEVICE_ID = #{newDeviceId}, REG_DT = NOW()
        WHERE APP_CODE = #{appCode}
        AND DEVICE_TYPE = #{deviceType}
        AND DEVICE_ID = #{oldDeviceId}
    </update>

    <update id="updateReceiveSuccess" parameterType="long">
        UPDATE TBFF_PUSH_HIST
        SET RECEIVE_SUCCES_YN = 'Y'
        WHERE HIST_SEQ = #{histSeq}
    </update>

</mapper>
